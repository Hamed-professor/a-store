// src/components/Order/OrderDetail.tsx
import React from 'react';
import { X, FileText, Package, Phone, Mail } from 'lucide-react';

interface OrderItem {
  id: string;
  name: string;
  variant?: string;
  quantity: number;
  price: number;
  total: number;
  image?: string;
}

interface Order {
  id: string;
  customerName: string;
  customerEmail: string;
  customerPhone?: string;
  status: string;
  total: number;
  items: number;
  date: string;
  paymentStatus: string;
  shippingAddress: string;
}

interface OrderDetailProps {
  order: Order;
  onClose: () => void;
  onInvoiceClick?: (order: Order) => void;
}

const OrderDetail: React.FC<OrderDetailProps> = ({ order, onClose, onInvoiceClick }) => {
  const getStatusColor = (status: string) => {
    const colors = {
      pending: 'text-yellow-600 bg-yellow-50',
      processing: 'text-blue-600 bg-blue-50',
      shipped: 'text-green-600 bg-green-50',
      delivered: 'text-emerald-600 bg-emerald-50',
      cancelled: 'text-red-600 bg-red-50'
    };
    return colors[status] || 'text-gray-600 bg-gray-50';
  };

  const getStatusText = (status: string) => {
    const statusTexts = {
      pending: 'در انتظار',
      processing: 'در حال پردازش',
      shipped: 'ارسال شده',
      delivered: 'تحویل شده',
      cancelled: 'لغو شده'
    };
    return statusTexts[status] || status;
  };

  // Mock order items - در پروژه واقعی از API دریافت می‌شود
  const orderItems: OrderItem[] = [
    {
      id: '1',
      name: 'محصول نمونه ۱',
      variant: 'رنگ: آبی، سایز: L',
      quantity: 2,
      price: 1200000,
      total: 2400000
    },
    {
      id: '2',
      name: 'محصول نمونه ۲',
      variant: 'رنگ: قرمز، سایز: M',
      quantity: 1,
      price: 450000,
      total: 450000
    }
  ];

  const subtotal = orderItems.reduce((sum, item) => sum + item.total, 0);
  const tax = Math.round(subtotal * 0.09);
  const shipping = order.total > 1000000 ? 0 : 50000;
  const finalTotal = subtotal + tax + shipping;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        <div className="p-6 border-b border-gray-200 flex items-center justify-between sticky top-0 bg-white">
          <h3 className="text-xl font-semibold">جزئیات سفارش {order.id}</h3>
          <button
            onClick={onClose}
            className="text-gray-400 hover:text-gray-600 p-2 hover:bg-gray-100 rounded-lg transition-colors"
          >
            <X className="w-6 h-6" />
          </button>
        </div>

        <div className="p-6 space-y-6">
          {/* Order Status */}
          <div className="bg-gray-50 rounded-lg p-4">
            <div className="flex items-center justify-between">
              <div>
                <h4 className="font-semibold text-gray-900 mb-2">وضعیت سفارش</h4>
                <span className={`inline-flex px-3 py-2 rounded-full text-sm font-medium ${getStatusColor(order.status)}`}>
                  {getStatusText(order.status)}
                </span>
              </div>
              <div className="text-left">
                <div className="text-sm text-gray-600">تاریخ سفارش</div>
                <div className="font-medium">{order.date}</div>
              </div>
            </div>
          </div>

          {/* Customer & Order Info */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="space-y-4">
              <h4 className="font-semibold text-gray-900">اطلاعات سفارش</h4>
              <div className="space-y-3 text-sm">
                <div className="flex justify-between">
                  <span className="text-gray-600">شماره سفارش:</span>
                  <span className="font-medium">{order.id}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600">تاریخ سفارش:</span>
                  <span className="font-medium">{order.date}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600">وضعیت پرداخت:</span>
                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                    order.paymentStatus === 'paid' 
                      ? 'text-green-600 bg-green-50' 
                      : 'text-yellow-600 bg-yellow-50'
                  }`}>
                    {order.paymentStatus === 'paid' ? 'پرداخت شده' : 'در انتظار پرداخت'}
                  </span>
                </div>
              </div>
            </div>

            <div className="space-y-4">
              <h4 className="font-semibold text-gray-900">اطلاعات مشتری</h4>
              <div className="space-y-3 text-sm">
                <div className="flex justify-between">
                  <span className="text-gray-600">نام:</span>
                  <span className="font-medium">{order.customerName}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600">ایمیل:</span>
                  <span className="font-medium">{order.customerEmail}</span>
                </div>
                {order.customerPhone && (
                  <div className="flex justify-between">
                    <span className="text-gray-600">تلفن:</span>
                    <span className="font-medium">{order.customerPhone}</span>
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* Shipping Address */}
          <div className="border-t pt-6">
            <h4 className="font-semibold text-gray-900 mb-3">آدرس ارسال</h4>
            <p className="text-gray-700 bg-gray-50 p-4 rounded-lg">{order.shippingAddress}</p>
          </div>

          {/* Order Items */}
          <div className="border-t pt-6">
            <h4 className="font-semibold text-gray-900 mb-4">اقلام سفارش</h4>
            <div className="space-y-4">
              {orderItems.map((item) => (
                <div key={item.id} className="flex items-center gap-4 p-4 border rounded-lg">
                  <div className="w-16 h-16 bg-gray-200 rounded-lg flex items-center justify-center">
                    <Package className="w-8 h-8 text-gray-400" />
                  </div>
                  <div className="flex-1">
                    <h5 className="font-medium text-gray-900">{item.name}</h5>
                    {item.variant && <p className="text-sm text-gray-600">{item.variant}</p>}
                  </div>
                  <div className="text-left">
                    <p className="font-medium">{item.quantity} × {item.price.toLocaleString()} تومان</p>
                    <p className="text-sm text-gray-600">{item.total.toLocaleString()} تومان</p>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Order Summary */}
          <div className="border-t pt-6">
            <div className="bg-gray-50 rounded-lg p-6 space-y-3">
              <div className="flex justify-between text-sm">
                <span className="text-gray-600">جمع اقلام:</span>
                <span className="font-medium">{subtotal.toLocaleString()} تومان</span>
              </div>
              <div className="flex justify-between text-sm">
                <span className="text-gray-600">هزینه ارسال:</span>
                <span className="font-medium">
                  {shipping === 0 ? 'رایگان' : `${shipping.toLocaleString()} تومان`}
                </span>
              </div>
              <div className="flex justify-between text-sm">
                <span className="text-gray-600">مالیات (9%):</span>
                <span className="font-medium">{tax.toLocaleString()} تومان</span>
              </div>
              <div className="flex justify-between font-semibold text-lg border-t pt-3">
                <span>مجموع کل:</span>
                <span>{finalTotal.toLocaleString()} تومان</span>
              </div>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="flex gap-3 pt-6">
            <button className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors">
              به‌روزرسانی وضعیت
            </button>
            {onInvoiceClick && (
              <button 
                onClick={() => onInvoiceClick(order)}
                className="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2"
              >
                <FileText className="w-4 h-4" />
                صدور فاکتور
              </button>
            )}
            <button className="border border-gray-300 px-6 py-2 rounded-lg hover:bg-gray-50 transition-colors">
              چاپ برچسب ارسال
            </button>
            <button className="border border-gray-300 px-6 py-2 rounded-lg hover:bg-gray-50 transition-colors flex items-center gap-2">
              <Phone className="w-4 h-4" />
              تماس با مشتری
            </button>
            <button className="border border-gray-300 px-6 py-2 rounded-lg hover:bg-gray-50 transition-colors flex items-center gap-2">
              <Mail className="w-4 h-4" />
              ارسال ایمیل
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OrderDetail;