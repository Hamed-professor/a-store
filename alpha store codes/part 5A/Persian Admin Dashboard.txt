import React, { useState, useEffect } from 'react';
import { 
  BarChart, Bar, LineChart, Line, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, 
  Tooltip, Legend, ResponsiveContainer, Area, AreaChart 
} from 'recharts';
import {
  Menu, X, TrendingUp, TrendingDown, Users, Package, ShoppingCart, 
  DollarSign, AlertTriangle, Eye, Bell, Settings, LogOut, Search,
  Calendar, Download, Filter, MoreHorizontal, ArrowUp, ArrowDown
} from 'lucide-react';

// Mock data for demonstration
const mockSalesData = [
  { date: '۱۴۰۳/۰۶/۰۱', sales: 1200000, orders: 15 },
  { date: '۱۴۰۳/۰۶/۰۲', sales: 980000, orders: 12 },
  { date: '۱۴۰۳/۰۶/۰۳', sales: 1500000, orders: 18 },
  { date: '۱۴۰۳/۰۶/۰۴', sales: 1100000, orders: 14 },
  { date: '۱۴۰۳/۰۶/۰۵', sales: 1800000, orders: 22 },
  { date: '۱۴۰۳/۰۶/۰۶', sales: 2200000, orders: 28 },
  { date: '۱۴۰۳/۰۶/۰۷', sales: 1900000, orders: 24 }
];

const mockCategoryData = [
  { name: 'لوازم خانگی', value: 35, color: '#3b82f6' },
  { name: 'پوشاک', value: 25, color: '#10b981' },
  { name: 'کتاب', value: 20, color: '#f59e0b' },
  { name: 'ورزشی', value: 20, color: '#ef4444' }
];

const mockTopProducts = [
  { id: 1, name: 'لپ تاپ ایسوس', sales: 85, revenue: 25500000, trend: 'up' },
  { id: 2, name: 'گوشی سامسونگ', sales: 72, revenue: 21600000, trend: 'up' },
  { id: 3, name: 'هدفون بیتس', sales: 68, revenue: 13600000, trend: 'down' },
  { id: 4, name: 'ساعت هوشمند', sales: 54, revenue: 10800000, trend: 'up' }
];

const mockRecentOrders = [
  { id: '#۱۰۰۱', customer: 'علی احمدی', amount: 750000, status: 'تکمیل شده', time: '۲ ساعت پیش' },
  { id: '#۱۰۰۲', customer: 'مریم محمدی', amount: 1200000, status: 'در انتظار', time: '۳ ساعت پیش' },
  { id: '#۱۰۰۳', customer: 'حسن رضایی', amount: 450000, status: 'ارسال شده', time: '۵ ساعت پیش' },
  { id: '#۱۰۰۴', customer: 'فاطمه کریمی', amount: 890000, status: 'تکمیل شده', time: '۶ ساعت پیش' }
];

// Utility functions
const formatCurrency = (amount) => {
  return new Intl.NumberFormat('fa-IR', {
    style: 'currency',
    currency: 'IRR',
    minimumFractionDigits: 0
  }).format(amount);
};

const formatNumber = (num) => {
  return new Intl.NumberFormat('fa-IR').format(num);
};

// Components
const AdminHeader = ({ sidebarOpen, setSidebarOpen }) => (
  <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
    <div className="flex justify-between items-center">
      <div className="flex items-center gap-4">
        <button
          onClick={() => setSidebarOpen(!sidebarOpen)}
          className="lg:hidden p-2 rounded-lg text-gray-600 hover:bg-gray-100"
        >
          <Menu size={20} />
        </button>
        <div>
          <h1 className="text-xl font-bold text-gray-900">داشبورد مدیریت</h1>
          <p className="text-sm text-gray-500">فروشگاه آلفا - پنل مدیریت</p>
        </div>
      </div>
      
      <div className="flex items-center gap-4">
        <div className="relative">
          <input
            type="text"
            placeholder="جستجو..."
            className="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            dir="rtl"
          />
          <Search className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400" size={16} />
        </div>
        
        <button className="p-2 text-gray-600 hover:bg-gray-100 rounded-lg relative">
          <Bell size={20} />
          <span className="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">۳</span>
        </button>
        
        <div className="flex items-center gap-3 pr-4 border-r border-gray-200">
          <div className="text-right">
            <p className="text-sm font-medium text-gray-900">مدیر سیستم</p>
            <p className="text-xs text-gray-500">admin@alphastore.com</p>
          </div>
          <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold">
            م
          </div>
        </div>
      </div>
    </div>
  </header>
);

const AdminSidebar = ({ isOpen, setIsOpen }) => {
  const menuItems = [
    { icon: TrendingUp, label: 'داشبورد', active: true },
    { icon: Package, label: 'مدیریت محصولات' },
    { icon: ShoppingCart, label: 'سفارشات' },
    { icon: Users, label: 'مشتریان' },
    { icon: BarChart, label: 'گزارشات' },
    { icon: Settings, label: 'تنظیمات' },
  ];

  return (
    <>
      {isOpen && (
        <div 
          className="fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden"
          onClick={() => setIsOpen(false)}
        />
      )}
      <aside className={`
        fixed lg:static inset-y-0 right-0 z-50 w-64 bg-gray-900 text-white transform transition-transform duration-300
        ${isOpen ? 'translate-x-0' : 'translate-x-full lg:translate-x-0'}
      `}>
        <div className="flex items-center justify-between p-6 border-b border-gray-700">
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center font-bold">
              α
            </div>
            <span className="text-lg font-bold">فروشگاه آلفا</span>
          </div>
          <button 
            onClick={() => setIsOpen(false)}
            className="lg:hidden text-gray-400 hover:text-white"
          >
            <X size={20} />
          </button>
        </div>
        
        <nav className="p-4">
          {menuItems.map((item, index) => (
            <button
              key={index}
              className={`w-full flex items-center gap-3 px-3 py-3 rounded-lg text-right mb-2 transition-colors ${
                item.active 
                  ? 'bg-blue-600 text-white' 
                  : 'text-gray-300 hover:bg-gray-800 hover:text-white'
              }`}
            >
              <item.icon size={20} />
              <span>{item.label}</span>
            </button>
          ))}
        </nav>
        
        <div className="absolute bottom-0 left-0 right-0 p-4 border-t border-gray-700">
          <button className="w-full flex items-center gap-3 px-3 py-3 rounded-lg text-gray-300 hover:bg-gray-800 hover:text-white transition-colors">
            <LogOut size={20} />
            <span>خروج</span>
          </button>
        </div>
      </aside>
    </>
  );
};

const QuickStatsCard = ({ icon: Icon, title, value, change, trend, color = 'blue' }) => {
  const colors = {
    blue: 'bg-blue-500',
    green: 'bg-green-500',
    yellow: 'bg-yellow-500',
    red: 'bg-red-500',
    purple: 'bg-purple-500'
  };

  return (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <div className="flex items-center justify-between mb-4">
        <div className={`p-3 rounded-lg ${colors[color]} text-white`}>
          <Icon size={24} />
        </div>
        <div className={`flex items-center gap-1 text-sm ${trend === 'up' ? 'text-green-600' : 'text-red-600'}`}>
          {trend === 'up' ? <ArrowUp size={16} /> : <ArrowDown size={16} />}
          <span>{change}</span>
        </div>
      </div>
      
      <div className="text-right">
        <p className="text-2xl font-bold text-gray-900 mb-1">{value}</p>
        <p className="text-sm text-gray-600">{title}</p>
      </div>
    </div>
  );
};

const SalesChart = () => (
  <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
    <div className="flex justify-between items-center mb-6">
      <h3 className="text-lg font-semibold text-gray-900">نمودار فروش هفتگی</h3>
      <div className="flex gap-2">
        <button className="px-3 py-1 bg-blue-100 text-blue-700 rounded-lg text-sm">هفتگی</button>
        <button className="px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-lg text-sm">ماهانه</button>
        <button className="px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-lg text-sm">سالانه</button>
      </div>
    </div>
    
    <ResponsiveContainer width="100%" height={300}>
      <AreaChart data={mockSalesData}>
        <CartesianGrid strokeDasharray="3 3" />
        <XAxis dataKey="date" />
        <YAxis tickFormatter={(value) => formatNumber(value / 1000) + 'ک'} />
        <Tooltip 
          formatter={(value) => [formatCurrency(value), 'فروش']}
          labelFormatter={(label) => `تاریخ: ${label}`}
        />
        <Area
          type="monotone"
          dataKey="sales"
          stroke="#3b82f6"
          fill="#3b82f6"
          fillOpacity={0.1}
          strokeWidth={2}
        />
      </AreaChart>
    </ResponsiveContainer>
  </div>
);

const CategoryChart = () => (
  <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
    <h3 className="text-lg font-semibold text-gray-900 mb-6">فروش بر اساس دسته‌بندی</h3>
    
    <ResponsiveContainer width="100%" height={250}>
      <PieChart>
        <Pie
          data={mockCategoryData}
          cx="50%"
          cy="50%"
          outerRadius={80}
          dataKey="value"
          label={({ name, value }) => `${name}: ${value}%`}
        >
          {mockCategoryData.map((entry, index) => (
            <Cell key={index} fill={entry.color} />
          ))}
        </Pie>
        <Tooltip />
      </PieChart>
    </ResponsiveContainer>
    
    <div className="mt-4 space-y-2">
      {mockCategoryData.map((item, index) => (
        <div key={index} className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <div className={`w-3 h-3 rounded-full`} style={{ backgroundColor: item.color }} />
            <span className="text-sm text-gray-600">{item.name}</span>
          </div>
          <span className="text-sm font-medium">{item.value}%</span>
        </div>
      ))}
    </div>
  </div>
);

const TopProducts = () => (
  <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
    <div className="flex justify-between items-center mb-6">
      <h3 className="text-lg font-semibold text-gray-900">محصولات پرفروش</h3>
      <button className="text-blue-600 hover:text-blue-700 text-sm">مشاهده همه</button>
    </div>
    
    <div className="space-y-4">
      {mockTopProducts.map((product) => (
        <div key={product.id} className="flex items-center justify-between py-3 border-b border-gray-100 last:border-0">
          <div className="flex-1">
            <h4 className="font-medium text-gray-900">{product.name}</h4>
            <p className="text-sm text-gray-600">{formatNumber(product.sales)} فروش</p>
          </div>
          
          <div className="text-right">
            <p className="font-semibold text-gray-900">{formatCurrency(product.revenue)}</p>
            <div className={`flex items-center gap-1 text-sm ${
              product.trend === 'up' ? 'text-green-600' : 'text-red-600'
            }`}>
              {product.trend === 'up' ? <TrendingUp size={14} /> : <TrendingDown size={14} />}
              <span>{product.trend === 'up' ? '↗' : '↘'}</span>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
);

const RecentOrders = () => (
  <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
    <div className="flex justify-between items-center mb-6">
      <h3 className="text-lg font-semibold text-gray-900">سفارشات اخیر</h3>
      <button className="text-blue-600 hover:text-blue-700 text-sm">مشاهده همه</button>
    </div>
    
    <div className="overflow-x-auto">
      <table className="w-full">
        <thead>
          <tr className="border-b border-gray-200">
            <th className="text-right py-3 text-sm font-medium text-gray-700">شماره سفارش</th>
            <th className="text-right py-3 text-sm font-medium text-gray-700">مشتری</th>
            <th className="text-right py-3 text-sm font-medium text-gray-700">مبلغ</th>
            <th className="text-right py-3 text-sm font-medium text-gray-700">وضعیت</th>
            <th className="text-right py-3 text-sm font-medium text-gray-700">زمان</th>
          </tr>
        </thead>
        <tbody>
          {mockRecentOrders.map((order, index) => (
            <tr key={index} className="border-b border-gray-100 last:border-0">
              <td className="py-3 text-sm text-blue-600 font-medium">{order.id}</td>
              <td className="py-3 text-sm text-gray-900">{order.customer}</td>
              <td className="py-3 text-sm text-gray-900">{formatCurrency(order.amount)}</td>
              <td className="py-3">
                <span className={`px-2 py-1 rounded-full text-xs ${
                  order.status === 'تکمیل شده' 
                    ? 'bg-green-100 text-green-700'
                    : order.status === 'ارسال شده'
                    ? 'bg-blue-100 text-blue-700'
                    : 'bg-yellow-100 text-yellow-700'
                }`}>
                  {order.status}
                </span>
              </td>
              <td className="py-3 text-sm text-gray-600">{order.time}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>
);

// Main Dashboard Component
const AlphaStoreAdminDashboard = () => {
  const [sidebarOpen, setSidebarOpen] = useState(false);

  return (
    <div className="min-h-screen bg-gray-50 flex" dir="rtl">
      <AdminSidebar isOpen={sidebarOpen} setIsOpen={setSidebarOpen} />
      
      <div className="flex-1 flex flex-col">
        <AdminHeader sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} />
        
        <main className="flex-1 p-6">
          {/* Quick Stats */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <QuickStatsCard
              icon={DollarSign}
              title="فروش امروز"
              value={formatCurrency(2200000)}
              change="۱۵٪"
              trend="up"
              color="blue"
            />
            <QuickStatsCard
              icon={ShoppingCart}
              title="کل سفارشات"
              value={formatNumber(1247)}
              change="۸٪"
              trend="up"
              color="green"
            />
            <QuickStatsCard
              icon={Users}
              title="مشتریان فعال"
              value={formatNumber(856)}
              change="۳٪"
              trend="down"
              color="purple"
            />
            <QuickStatsCard
              icon={AlertTriangle}
              title="کمبود موجودی"
              value={formatNumber(23)}
              change="۵٪"
              trend="up"
              color="red"
            />
          </div>

          {/* Charts Section */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
            <SalesChart />
            <CategoryChart />
          </div>

          {/* Products and Orders */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <TopProducts />
            <RecentOrders />
          </div>
        </main>
      </div>
    </div>
  );
};

export default AlphaStoreAdminDashboard;