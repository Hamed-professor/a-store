// src/utils/invoice.ts
import { Order, Invoice } from '../types/order';

export const generateInvoiceNumber = (orderId: string): string => {
  const date = new Date();
  const year = date.getFullYear();
  const month = (date.getMonth() + 1).toString().padStart(2, '0');
  const day = date.getDate().toString().padStart(2, '0');
  const orderSuffix = orderId.slice(-4);
  
  return `INV-${year}${month}${day}-${orderSuffix}`;
};

export const createInvoice = (order: Order): Invoice => {
  const invoiceNumber = generateInvoiceNumber(order.id);
  const issueDate = new Date();
  const dueDate = new Date();
  dueDate.setDate(dueDate.getDate() + 30); // 30 days payment term

  return {
    id: `inv-${order.id}`,
    orderId: order.id,
    invoiceNumber,
    issueDate,
    dueDate,
    companyInfo: {
      name: 'Î± Store',
      address: 'تهران، خیابان ولیعصر، پلاک ۱۲۳۴، طبقه ۵',
      phone: '۰۲۱-۱۲۳۴۵۶۷۸',
      taxId: '۱۲۳۴۵۶۷۸۹۰',
      registrationNumber: '۹۸۷۶۵۴۳۲۱'
    },
    customerInfo: {
      name: `${order.shippingAddress.firstName} ${order.shippingAddress.lastName}`,
      address: `${order.shippingAddress.address}، ${order.shippingAddress.city}، ${order.shippingAddress.province}`,
      phone: order.shippingAddress.phoneNumber
    },
    items: order.items,
    subtotal: order.subtotal,
    tax: order.tax,
    total: order.total
  };
};

export const generateInvoiceHTML = (invoice: Invoice): string => {
  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('fa-IR').format(price) + ' تومان';
  };

  const formatDate = (date: Date) => {
    return new Intl.DateTimeFormat('fa-IR', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    }).format(date);
  };

  const formatNumber = (num: number) => {
    return new Intl.NumberFormat('fa-IR').format(num);
  };

  return `
<!DOCTYPE html>
<html dir="rtl" lang="fa">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>فاکتور ${invoice.invoiceNumber}</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Vazirmatn:wght@400;500;700&display=swap');
        
        body {
            font-family: 'Vazirmatn', Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background: white;
            color: #333;
            font-size: 14px;
            line-height: 1.6;
        }
        
        .invoice-container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border: 2px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
        }
        
        .invoice-header {
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .company-logo {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 10px;
        }
        
        .invoice-title {
            font-size: 24px;
            font-weight: 500;
            margin: 20px 0 10px;
        }
        
        .invoice-number {
            font-size: 18px;
            font-weight: 700;
            background: rgba(255, 255, 255, 0.2);
            padding: 8px 16px;
            border-radius: 20px;
            display: inline-block;
        }
        
        .invoice-body {
            padding: 30px;
        }
        
        .invoice-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }
        
        .info-section {
            background: #f8fafc;
            padding: 20px;
            border-radius: 8px;
            border-right: 4px solid #6366f1;
        }
        
        .info-title {
            font-size: 16px;
            font-weight: 700;
            color: #6366f1;
            margin-bottom: 15px;
            border-bottom: 2px solid #e2e8f0;
            padding-bottom: 8px;
        }
        
        .info-item {
            margin-bottom: 8px;
        }
        
        .info-label {
            font-weight: 500;
            color: #64748b;
            display: inline-block;
            width: 80px;
        }
        
        .items-table {
            width: 100%;
            border-collapse: collapse;
            margin: 30px 0;
            background: white;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }
        
        .items-table th {
            background: #6366f1;
            color: white;
            padding: 15px 12px;
            text-align: center;
            font-weight: 500;
            border-bottom: 2px solid #4f46e5;
        }
        
        .items-table td {
            padding: 12px;
            text-align: center;
            border-bottom: 1px solid #e2e8f0;
        }
        
        .items-table tbody tr:hover {
            background: #f8fafc;
        }
        
        .items-table tbody tr:last-child td {
            border-bottom: none;
        }
        
        .item-name {
            text-align: right !important;
            font-weight: 500;
        }
        
        .price-column {
            font-weight: 500;
            color: #6366f1;
        }
        
        .total-section {
            background: #f8fafc;
            padding: 20px;
            border-radius: 8px;
            margin-top: 30px;
            border: 2px solid #e2e8f0;
        }
        
        .total-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            padding: 8px 0;
        }
        
        .total-row.subtotal {
            color: #64748b;
        }
        
        .total-row.tax {
            color: #64748b;
            border-bottom: 1px solid #cbd5e1;
            margin-bottom: 15px;
            padding-bottom: 15px;
        }
        
        .total-row.final {
            font-size: 18px;
            font-weight: 700;
            color: #6366f1;
            background: white;
            padding: 15px;
            border-radius: 6px;
            border: 2px solid #6366f1;
            margin-bottom: 0;
        }
        
        .invoice-footer {
            margin-top: 40px;
            padding-top: 20px;
            border-top: 2px solid #e2e8f0;
            text-align: center;
            color: #64748b;
        }
        
        .footer-note {
            background: #fef3c7;
            border: 1px solid #fbbf24;
            color: #92400e;
            padding: 15px;
            border-radius: 6px;
            margin-top: 20px;
        }
        
        @media print {
            body { margin: 0; padding: 0; }
            .invoice-container { border: none; box-shadow: none; }
        }
    </style>
</head>
<body>
    <div class="invoice-container">
        <div class="invoice-header">
            <div class="company-logo">Î± Store</div>
            <div class="invoice-title">فاکتور فروش</div>
            <div class="invoice-number">${invoice.invoiceNumber}</div>
        </div>
        
        <div class="invoice-body">
            <div class="invoice-info">
                <div class="info-section">
                    <div class="info-title">اطلاعات فروشنده</div>
                    <div class="info-item">
                        <span class="info-label">نام:</span>
                        ${invoice.companyInfo.name}
                    </div>
                    <div class="info-item">
                        <span class="info-label">آدرس:</span>
                        ${invoice.companyInfo.address}
                    </div>
                    <div class="info-item">
                        <span class="info-label">تلفن:</span>
                        ${invoice.companyInfo.phone}
                    </div>
                    <div class="info-item">
                        <span class="info-label">شماره ثبت:</span>
                        ${invoice.companyInfo.registrationNumber}
                    </div>
                    <div class="info-item">
                        <span class="info-label">شناسه ملی:</span>
                        ${invoice.companyInfo.taxId}
                    </div>
                </div>
                
                <div class="info-section">
                    <div class="info-title">اطلاعات خریدار</div>
                    <div class="info-item">
                        <span class="info-label">نام:</span>
                        ${invoice.customerInfo.name}
                    </div>
                    <div class="info-item">
                        <span class="info-label">آدرس:</span>
                        ${invoice.customerInfo.address}
                    </div>
                    <div class="info-item">
                        <span class="info-label">تلفن:</span>
                        ${invoice.customerInfo.phone}
                    </div>
                    <div class="info-item">
                        <span class="info-label">تاریخ صدور:</span>
                        ${formatDate(invoice.issueDate)}
                    </div>
                    <div class="info-item">
                        <span class="info-label">سررسید:</span>
                        ${formatDate(invoice.dueDate)}
                    </div>
                </div>
            </div>
            
            <table class="items-table">
                <thead>
                    <tr>
                        <th>ردیف</th>
                        <th>شرح کالا/خدمات</th>
                        <th>تعداد</th>
                        <th>قیمت واحد</th>
                        <th>مبلغ کل</th>
                    </tr>
                </thead>
                <tbody>
                    ${invoice.items.map((item, index) => `
                        <tr>
                            <td>${formatNumber(index + 1)}</td>
                            <td class="item-name">${item.namePersian}</td>
                            <td>${formatNumber(item.quantity)}</td>
                            <td class="price-column">${formatPrice(item.price)}</td>
                            <td class="price-column">${formatPrice(item.price * item.quantity)}</td>
                        </tr>
                    `).join('')}
                </tbody>
            </table>
            
            <div class="total-section">
                <div class="total-row subtotal">
                    <span>جمع کل (قبل از مالیات):</span>
                    <span>${formatPrice(invoice.subtotal)}</span>
                </div>
                <div class="total-row tax">
                    <span>مالیات بر ارزش افزوده (۹٪):</span>
                    <span>${formatPrice(invoice.tax)}</span>
                </div>
                <div class="total-row final">
                    <span>مبلغ نهایی قابل پرداخت:</span>
                    <span>${formatPrice(invoice.total)}</span>
                </div>
            </div>
            
            <div class="invoice-footer">
                <p><strong>Î± Store</strong> - فروشگاه آنلاین محصولات لوکس ایرانی</p>
                <p>www.alphastore.ir | info@alphastore.ir</p>
                
                <div class="footer-note">
                    <strong>توجه:</strong> این فاکتور به صورت الکترونیکی صادر شده و دارای اعتبار قانونی است.
                    لطفاً این فاکتور را تا پایان دوره گارانتی نزد خود نگهداری کنید.
                </div>
            </div>
        </div>
    </div>
</body>
</html>
  `;
};

export const printInvoice = (invoice: Invoice): void => {
  const htmlContent = generateInvoiceHTML(invoice);
  const printWindow = window.open('', '_blank');
  
  if (printWindow) {
    printWindow.document.write(htmlContent);
    printWindow.document.close();
    
    printWindow.onload = () => {
      printWindow.print();
      printWindow.close();
    };
  }
};

export const downloadInvoicePDF = async (invoice: Invoice): Promise<void> => {
  // In a real app, you would use a PDF generation library like jsPDF or Puppeteer
  // For now, we'll simulate the download with a blob
  
  const htmlContent = generateInvoiceHTML(invoice);
  const blob = new Blob([htmlContent], { type: 'text/html' });
  const url = URL.createObjectURL(blob);
  
  const link = document.createElement('a');
  link.href = url;
  link.download = `invoice-${invoice.invoiceNumber}.html`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  
  URL.revokeObjectURL(url);
};