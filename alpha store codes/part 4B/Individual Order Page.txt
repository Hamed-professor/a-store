// pages/orders/[orderId].tsx
import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import { ArrowRight, Package, Truck, Phone, MessageCircle, RotateCcw, X } from 'lucide-react';
import { OrderStatus } from '../../src/components/order/OrderStatus';
import { OrderTracking } from '../../src/components/order/OrderTracking';
import { InvoiceDownload } from '../../src/components/order/InvoiceDownload';
import { useOrder } from '../../src/hooks/useOrder';
import { Order, OrderStatus as OrderStatusEnum } from '../../src/types/order';

const OrderDetailPage: React.FC = () => {
  const router = useRouter();
  const { orderId } = router.query;
  const { getOrderById, getOrderStatusInfo, cancelOrder, reorderItems } = useOrder();
  const [order, setOrder] = useState<Order | null>(null);
  const [showCancelDialog, setShowCancelDialog] = useState(false);
  const [cancelReason, setCancelReason] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);

  useEffect(() => {
    if (orderId && typeof orderId === 'string') {
      const foundOrder = getOrderById(orderId);
      setOrder(foundOrder || null);
    }
  }, [orderId, getOrderById]);

  const handleCancelOrder = async () => {
    if (!order || !cancelReason.trim()) return;

    setIsSubmitting(true);
    try {
      const success = await cancelOrder(order.id, cancelReason);
      if (success) {
        setShowCancelDialog(false);
        setCancelReason('');
        // Refresh order data
        const updatedOrder = getOrderById(order.id);
        setOrder(updatedOrder || null);
      }
    } catch (error) {
      console.error('Failed to cancel order:', error);
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleReorder = () => {
    if (!order) return;
    reorderItems(order.id);
    router.push('/cart');
  };

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('fa-IR').format(price) + ' تومان';
  };

  const formatDate = (date: Date) => {
    return new Intl.DateTimeFormat('fa-IR', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    }).format(date);
  };

  const canCancelOrder = (status: OrderStatusEnum) => {
    return [OrderStatusEnum.PENDING, OrderStatusEnum.CONFIRMED].includes(status);
  };

  const canReorder = (status: OrderStatusEnum) => {
    return [OrderStatusEnum.DELIVERED, OrderStatusEnum.CANCELLED].includes(status);
  };

  if (!order) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center" dir="rtl">
        <div className="text-center">
          <div className="w-16 h-16 border-4 border-alpha-600 border-t-transparent rounded-full animate-spin mx-auto mb-4" />
          <p className="text-gray-600">در حال بارگذاری اطلاعات سفارش...</p>
        </div>
      </div>
    );
  }

  const statusInfo = getOrderStatusInfo(order.status);

  return (
    <div className="min-h-screen bg-gray-50" dir="rtl">
      <div className="max-w-7xl mx-auto px-4 py-8">
        {/* Header */}
        <div className="flex items-center justify-between mb-8">
          <div className="flex items-center space-x-4 space-x-reverse">
            <button
              onClick={() => router.back()}
              className="p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors duration-200"
            >
              <ArrowRight className="w-5 h-5" />
            </button>
            <div>
              <h1 className="text-3xl font-bold text-gray-900">
                سفارش {order.orderNumber}
              </h1>
              <p className="text-gray-600">ثبت شده در {formatDate(order.createdAt)}</p>
            </div>
          </div>

          <div className="flex space-x-3 space-x-reverse">
            {canReorder(order.status) && (
              <button
                onClick={handleReorder}
                className="flex items-center px-4 py-2 border border-alpha-600 text-alpha-600 rounded-lg hover:bg-alpha-50 transition-colors duration-200"
              >
                <RotateCcw className="w-4 h-4 ml-2" />
                سفارش مجدد
              </button>
            )}

            {canCancelOrder(order.status) && (
              <button
                onClick={() => setShowCancelDialog(true)}
                className="flex items-center px-4 py-2 border border-red-600 text-red-600 rounded-lg hover:bg-red-50 transition-colors duration-200"
              >
                <X className="w-4 h-4 ml-2" />
                لغو سفارش
              </button>
            )}

            <button className="flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors duration-200">
              <MessageCircle className="w-4 h-4 ml-2" />
              پشتیبانی
            </button>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Main Content */}
          <div className="lg:col-span-2 space-y-8">
            {/* Order Status */}
            <OrderStatus
              status={order.status}
              statusInfo={statusInfo}
              createdAt={order.createdAt}
              updatedAt={order.updatedAt}
              trackingNumber={order.trackingNumber}
              estimatedDelivery={order.estimatedDelivery}
            />

            {/* Order Items */}
            <div className="bg-white rounded-xl shadow-sm border p-6">
              <h3 className="text-lg font-bold text-gray-900 mb-6 flex items-center">
                <Package className="w-5 h-5 ml-2 text-alpha-600" />
                محصولات سفارش ({order.items.length} مورد)
              </h3>

              <div className="space-y-4">
                {order.items.map(item => (
                  <div key={item.id} className="flex items-center space-x-4 space-x-reverse p-4 border border-gray-100 rounded-lg hover:bg-gray-50 transition-colors duration-200">
                    <img
                      src={item.image}
                      alt={item.namePersian}
                      className="w-20 h-20 object-cover rounded-lg"
                      onError={(e) => {
                        (e.target as HTMLImageElement).src = '/images/placeholder.jpg';
                      }}
                    />
                    
                    <div className="flex-1">
                      <h4 className="font-medium text-gray-900 mb-1">{item.namePersian}</h4>
                      <p className="text-sm text-gray-600 mb-2">{item.name}</p>
                      {item.variant && (
                        <div className="flex space-x-2 space-x-reverse">
                          {item.variant.size && (
                            <span className="text-xs bg-gray-100 px-2 py-1 rounded">
                              سایز: {item.variant.size}
                            </span>
                          )}
                          {item.variant.color && (
                            <span className="text-xs bg-gray-100 px-2 py-1 rounded">
                              رنگ: {item.variant.color}
                            </span>
                          )}
                        </div>
                      )}
                    </div>

                    <div className="text-center">
                      <p className="text-sm text-gray-600">تعداد</p>
                      <p className="font-medium text-lg">{item.quantity}</p>
                    </div>

                    <div className="text-left">
                      <p className="text-sm text-gray-600">قیمت واحد</p>
                      <p className="font-medium text-alpha-600">
                        {formatPrice(item.price)}
                      </p>
                    </div>

                    <div className="text-left">
                      <p className="text-sm text-gray-600">جمع</p>
                      <p className="font-bold text-alpha-600 text-lg">
                        {formatPrice(item.price * item.quantity)}
                      </p>
                    </div>
                  </div>
                ))}
              </div>

              {/* Order Total */}
              <div className="mt-8 pt-6 border-t">
                <div className="bg-gray-50 rounded-lg p-6">
                  <div className="space-y-3">
                    <div className="flex justify-between text-gray-600">
                      <span>مجموع محصولات:</span>
                      <span>{formatPrice(order.subtotal)}</span>
                    </div>
                    <div className="flex justify-between text-gray-600">
                      <span>هزینه ارسال:</span>
                      <span>{formatPrice(order.shippingCost)}</span>
                    </div>
                    <div className="flex justify-between text-gray-600">
                      <span>مالیات (۹٪):</span>
                      <span>{formatPrice(order.tax)}</span>
                    </div>
                    <hr className="border-gray-300" />
                    <div className="flex justify-between text-xl font-bold text-gray-900">
                      <span>مجموع نهایی:</span>
                      <span className="text-alpha-600">{formatPrice(order.total)}</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Shipping Information */}
            <div className="bg-white rounded-xl shadow-sm border p-6">
              <h3 className="text-lg font-bold text-gray-900 mb-6 flex items-center">
                <Truck className="w-5 h-5 ml-2 text-alpha-600" />
                اطلاعات ارسال
              </h3>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-medium text-gray-900 mb-3">آدرس تحویل</h4>
                  <div className="text-sm text-gray-600 space-y-1 bg-gray-50 p-4 rounded-lg">
                    <p className="font-medium text-gray-900">
                      {order.shippingAddress.firstName} {order.shippingAddress.lastName}
                    </p>
                    <p className="flex items-center">
                      <Phone className="w-4 h-4 ml-2 text-gray-400" />
                      {order.shippingAddress.phoneNumber}
                    </p>
                    <p>{order.shippingAddress.address}</p>
                    <p>{order.shippingAddress.city}، {order.shippingAddress.province}</p>
                    <p>کد پستی: {order.shippingAddress.postalCode}</p>
                    {order.shippingAddress.specialInstructions && (
                      <div className="mt-3 p-3 bg-yellow-50 border border-yellow-200 rounded">
                        <p className="text-xs font-medium text-yellow-800 mb-1">توضیحات ویژه:</p>
                        <p className="text-yellow-700">{order.shippingAddress.specialInstructions}</p>
                      </div>
                    )}
                  </div>
                </div>

                <div>
                  <h4 className="font-medium text-gray-900 mb-3">روش ارسال</h4>
                  <div className="bg-alpha-50 border border-alpha-200 rounded-lg p-4">
                    <div className="flex items-center justify-between mb-2">
                      <p className="font-medium text-alpha-900">{order.shippingMethod.namePersian}</p>
                      <span className="font-bold text-alpha-600">
                        {formatPrice(order.shippingMethod.price)}
                      </span>
                    </div>
                    <p className="text-sm text-alpha-700 mb-3">{order.shippingMethod.description}</p>
                    
                    {order.trackingNumber && (
                      <div className="bg-white border border-alpha-300 rounded p-3">
                        <p className="text-xs text-alpha-600 mb-1">کد رهگیری:</p>
                        <p className="font-mono font-bold text-alpha-800">{order.trackingNumber}</p>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Sidebar */}
          <div className="lg:col-span-1 space-y-6">
            {/* Invoice Download */}
            <InvoiceDownload order={order} />

            {/* Quick Actions */}
            <div className="bg-white rounded-xl shadow-sm border p-6">
              <h3 className="text-lg font-bold text-gray-900 mb-4">اقدامات سریع</h3>
              
              <div className="space-y-3">
                <button className="w-full flex items-center justify-center px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200">
                  <MessageCircle className="w-4 h-4 ml-2" />
                  ارتباط با پشتیبانی
                </button>
                
                <button className="w-full flex items-center justify-center px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200">
                  <Package className="w-4 h-4 ml-2" />
                  رهگیری مرسوله
                </button>

                {canReorder(order.status) && (
                  <button
                    onClick={handleReorder}
                    className="w-full flex items-center justify-center px-4 py-3 bg-alpha-600 text-white rounded-lg hover:bg-alpha-700 transition-colors duration-200"
                  >
                    <RotateCcw className="w-4 h-4 ml-2" />
                    سفارش مجدد
                  </button>
                )}
              </div>
            </div>

            {/* Help & Support */}
            <div className="bg-blue-50 border border-blue-200 rounded-xl p-6">
              <h3 className="text-lg font-bold text-blue-900 mb-4">پشتیبانی</h3>
              <div className="space-y-3 text-sm">
                <div className="flex items-center space-x-2 space-x-reverse">
                  <Phone className="w-4 h-4 text-blue-600" />
                  <span className="text-blue-800">۰۲۱-۱۲۳۴۵۶۷۸</span>
                </div>
                <div className="flex items-center space-x-2 space-x-reverse">
                  <MessageCircle className="w-4 h-4 text-blue-600" />
                  <span className="text-blue-800">support@alphastore.ir</span>
                </div>
              </div>
              <p className="text-xs text-blue-700 mt-4">
                ساعات کاری: شنبه تا پنج‌شنبه، ۹ تا ۱۸
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* Cancel Order Dialog */}
      {showCancelDialog && (
        <div className="fixed inset-0 z-50 overflow-y-auto">
          <div className="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
            <div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />

            <div className="relative inline-block align-bottom bg-white rounded-lg text-right overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
              <div className="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div className="flex items-start">
                  <div className="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                    <X className="h-6 w-6 text-red-600" />
                  </div>
                  <div className="mt-3 text-center sm:mt-0 sm:mr-4 sm:text-right">
                    <h3 className="text-lg leading-6 font-medium text-gray-900">
                      لغو سفارش
                    </h3>
                    <div className="mt-2">
                      <p className="text-sm text-gray-500 mb-4">
                        آیا از لغو این سفارش اطمینان دارید؟ این عمل قابل برگشت نیست.
                      </p>
                      
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        دلیل لغو سفارش:
                      </label>
                      <select
                        value={cancelReason}
                        onChange={(e) => setCancelReason(e.target.value)}
                        className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent"
                      >
                        <option value="">انتخاب دلیل...</option>
                        <option value="changed_mind">تغییر نظر</option>
                        <option value="found_better_price">قیمت بهتر در جای دیگر</option>
                        <option value="delivery_time">زمان تحویل طولانی</option>
                        <option value="financial_issue">مشکل مالی</option>
                        <option value="other">سایر موارد</option>
                      </select>
                    </div>
                  </div>
                </div>
              </div>
              <div className="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button
                  onClick={handleCancelOrder}
                  disabled={isSubmitting || !cancelReason}
                  className="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 disabled:opacity-50 sm:ml-3 sm:w-auto sm:text-sm"
                >
                  {isSubmitting ? 'در حال لغو...' : 'تأیید لغو'}
                </button>
                <button
                  onClick={() => setShowCancelDialog(false)}
                  className="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 sm:mt-0 sm:w-auto sm:text-sm"
                >
                  انصراف
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default OrderDetailPage;